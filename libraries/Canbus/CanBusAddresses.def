/**
 * @file CanBusMessages.def
 * @author IR
 * @brief Define incoming CAN line addresses
 * @version 0.2
 * @date 2020-11-15
 * 
 * @copyright Copyright (c) 2020
 * 
 */

#ifndef __ECU_CANBUSMESSAGES_H__
// @cond
#define __ECU_CANBUSMESSAGES_H__
// @endcond

#include "PPhelp.h"

#define OUTGOING 1
#define INCOMING 0

// Define addresses values here
#define ADD_BMS_SOC 0x0000
#define ADD_BMS_VOLT 0x0000
#define ADD_MC0_VOLT 0x0000
#define ADD_MC1_VOLT 0x0000
#define ADD_MC0_RPM 0x0000
#define ADD_MC1_RPM 0x0000
#define ADD_MC0_PWR 0x0000
#define ADD_MC1_PWR 0x0000
// canPin addresses
#define ADD_CANPIN_ANALOG0 0x0000
#define ADD_CANPIN_ANALOG1 0x0000
#define ADD_CANPIN_ANALOG2 0x0000
#define ADD_CANPIN_DIGITAL0 0x0000

/**
 * @brief Defines the Can bus addresses that will be used to receive and send data
 * 
 * Every definition is given a direction denoting whether it is incoming or outgoing
 * 
 * Unless it is the last entry, this is how to add a new message
 * 
 * X(CAN address, direction) \
 * 
 * Only the last entry should NOT have a '\'
 * 
 * @note Currently, address 0x0000 cannot be used
 */
#define CAN_ADDRESS           \
    X(ADD_BMS_SOC, INCOMING)  \
    X(ADD_BMS_VOLT, INCOMING) \
    X(ADD_MC0_VOLT, INCOMING) \
    X(ADD_MC1_VOLT, INCOMING) \
    X(ADD_MC0_RPM, INCOMING)  \
    X(ADD_MC1_RPM, INCOMING)  \
    X(ADD_MC0_PWR, INCOMING)  \
    X(ADD_MC1_PWR, INCOMING)

#endif // __ECU_CANBUSMESSAGES_H__