/**
 * @file FaultConfig.def
 * @author IR
 * @brief Configure fault checking
 * @version 0.1
 * @date 2021-01-27
 * 
 * @copyright Copyright (c) 2021
 * 
 */

#ifndef __ECU_FAULTCONFIG_DEF__
// @cond
#define __ECU_FAULTCONFIG_DEF__
// @endcond

#include "ECUGlobalConfig.h"
#include "Log.h"
#include "PPhelp.h"
#include "Pins.h"

/**
 * @brief Defines Pins that should be checked for hard faults
 * 
 * @note The identity calls the function _LogPrebuildString, this is used to notify Pre_Build.py of the string
 * 
 * Unless it is the last entry, this is how to add a new address
 * 
 * X(pin, comparator, value, identity) \
 * 
 * Only the last entry should NOT have a '\'
 * 
 */
#if CONF_ECU_POSITION == BACK_ECU
#define HARD_PIN_FAULTS                                                  \
    X(PINS_BACK_IMD_FAULT, >, 0, _LogPrebuildString("IMD Fault Signal")) \
    X(PINS_BACK_BMS_FAULT, >, 0, _LogPrebuildString("BMS Fault Signal")) \
    X(PINS_BACK_HVD_FAULT, >, 0, _LogPrebuildString("HVD Fault Signal"))
#else
#define HARD_PIN_FAULTS
#endif

/**
 * @brief Defines Pins that should be checked for hard faults
 * 
 * @note The identity calls the function _LogPrebuildString, this is used to notify Pre_Build.py of the string
 * 
 * Unless it is the last entry, this is how to add a new address
 * 
 * X(pin, comparator, value, identity) \
 * 
 * Only the last entry should NOT have a '\'
 * 
 */
#define SOFT_PIN_FAULTS

/**
 * @brief Defines CAN addresses that should be checked for hard faults
 * 
 * @note For documentation purposes, the last parameter is only used to identify what each message is for
 * 
 * Unless it is the last entry, this is how to add a new address
 * 
 * X(CAN address, mask, tag) \
 * 
 * Only the last entry should NOT have a '\'
 * 
 */
// TODO: BMS Fault address
#define HARD_FAULT_ADD \
    // X(ADD_MC0_FAULTS, 0x4000020120100080, "BMS") \
    // X(0x0, 0x0000000000000000, "RMS")

/**
 * @brief Defines CAN addresses that should be checked for soft faults
 * 
 * @note For documentation purposes, the last parameter is only used to identify what each message is for
 * 
 * Unless it is the last entry, this is how to add a new address
 * 
 * X(CAN address, mask, tag) \
 * 
 * Only the last entry should NOT have a '\'
 * 
 */
#define SOFT_FAULT_ADD                                                 \
    X(ADD_MC0_FAULTS, 0x1111111111111111, "Motor Controller 0 Faults") \
    X(ADD_MC1_FAULTS, 0x1111111111111111, "Motor Controller 1 Faults")

#endif // __ECU_FAULTCONFIG_DEF__
