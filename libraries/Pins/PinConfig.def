/**
 * @file PinConfig.def
 * @author your name (you@domain.com)
 * @brief The pin configuration for the Teensy
 * @version 0.1
 * @date 2020-11-11
 * 
 * @copyright Copyright (c) 2020
 * 
 */

#ifndef __ECU_PINCONFIG_H__

// @cond

#define __ECU_PINCONFIG_H__

#include "Canbus.h"
#include "ECUGlobalConfig.h"
#include "PPHelp.h"
#include "WProgram.h"

#define ANALOG
#define DIGITAL

// @endcond

#define CONF_PINS_CANBUS_UPDATE_INTERVAL_MICRO 20

// IMPROVE: Make access to pins dependent on CONF_ECU_POSITION, differentiate between ECU pins with same pos

// Both ECUs
#define PINS_BOTH_LED 13
// Back ECU Only - ECU0
#define PINS_BACK_AIR1 0
#define PINS_BACK_AIR2 0
#define PINS_BACK_PRECHARGE_RELAY 0
#define PINS_BACK_CHARGING_SIGNAL 0
#define PINS_BACK_CHARGING_RELAY 0
#define PINS_BACK_CHARGING_VOLTAGE 0
#define PINS_BACK_CHARGING_INPUT 0
#define PINS_BACK_SOUND_DRIVER 0
// Front ECU Only - ECU1
#define PINS_FRONT_BUTTON_INPUT 0
#define PINS_FRONT_PEDAL0 1
#define PINS_FRONT_PEDAL1 2
#define PINS_FRONT_STEER0 3
#define PINS_FRONT_STEER1 4
#define PINS_FRONT_BRAKE 5
#define PINS_FRONT_BMS_LIGHT 6

// TODO: PWM PINS

/**
 * @brief The defintions of every physical pin
 *
 * The pinout setup for the ECU, set the specific pin,
 * whether it is analog or digital, and whether we are
 * taking input or giving an output on the pin
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * X(GPIO, ANALOG/DIGITAL, INPUT/OUTPUT, PRIORITY) \
 * 
 * Only the last entry should NOT have a '\'
 */
#if CONF_ECU_POSITION == 0
#define PINS_CANBUS_DIRECTION INPUT
#define ECU_PINS                                 \
    X(PINS_BOTH_LED, DIGITAL, OUTPUT)            \
    X(PINS_BACK_AIR1, DIGITAL, OUTPUT)           \
    X(PINS_BACK_AIR2, DIGITAL, OUTPUT)           \
    X(PINS_BACK_PRECHARGE_RELAY, DIGITAL, INPUT) \
    X(PINS_BACK_CHARGING_SIGNAL, DIGITAL, INPUT) \
    X(PINS_BACK_CHARGING_RELAY, DIGITAL, OUTPUT) \
    X(PINS_BACK_CHARGING_VOLTAGE, ANALOG, INPUT) \
    X(PINS_BACK_CHARGING_INPUT, DIGITAL, INPUT)  \
    X(PINS_BACK_SOUND_DRIVER, DIGITAL, OUTPUT)
#else
#define PINS_CANBUS_DIRECTION OUTPUT
#define ECU_PINS                               \
    X(PINS_FRONT_BUTTON_INPUT, DIGITAL, INPUT) \
    X(PINS_FRONT_PEDAL0, ANALOG, INPUT)        \
    X(PINS_FRONT_PEDAL1, ANALOG, INPUT)        \
    X(PINS_FRONT_STEER0, ANALOG, INPUT)        \
    X(PINS_FRONT_STEER1, ANALOG, INPUT)        \
    X(PINS_FRONT_BRAKE, ANALOG, INPUT)         \
    X(PINS_FRONT_BMS_LIGHT, DIGITAL, INPUT)
#endif

/**
 * @brief The defintions of every analog pin to be sent/received over canbus
 *
 * @note Only two analog pins can be allocated per address
 * @note The number of pins per address must be addressed
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * X(Address, Pin) \
 * 
 * Only the last entry should NOT have a '\'
 */
#define PINS_CANBUS_ANALOG                   \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL0) \
    X(ADD_CANPIN_ANALOG0, PINS_FRONT_PEDAL1) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_STEER0) \
    X(ADD_CANPIN_ANALOG1, PINS_FRONT_STEER1) \
    X(ADD_CANPIN_ANALOG2, PINS_FRONT_BRAKE)

/**
 * @brief The defintions of every digital pin to be sent/received over canbus
 *
 * @note Only 8 digital pins can be allocated per address
 * @note Currently, only one address is supported, support for up to 64 pins can be added later if needed
 *
 * Unless it is the last entry, this is how to add a new pin
 *
 * X(Address, Pin) \
 * 
 * Only the last entry should NOT have a '\'
 */
#define PINS_CANBUS_DIGITAL                      \
    X(ADD_CANPIN_DIGITAL0, PINS_FRONT_BMS_LIGHT) \
    X(ADD_CANPIN_DIGITAL0, PINS_FRONT_BUTTON_INPUT)

#endif // __ECU_PINCONFIG_H__

// // Both Teensy's
// boardLed = 13,
// lightsIMDPin = 18,
// /*
//         Teensy One      Address: 0x400 - 0x405
// */
// //      button      //
// sig_startButton = 2,
// IMDReadLight = 99,
// AMSReadLight = 99,
// //      range       //
// sig_Wheel2 = 21,
// sig_Wheel1 = 20,
// sig_accel2 = 18,
// sig_accel1 = 16,
// sig_brakePress = 14,
// lightsBMSPin = 18,
// /*
//         Teensy Two      Address: 0x406 - 0x40A
// */
// //      send        //
// PWM_servo1 = 8,
// PWM_servo2 = 27, // BROKEN: pin 27 is not PWM?
// //      button      //
// sig_32v = 0,     // ON/OFF // WHAT?
// sig_charger = 5, // ON/OFF
// //      special     //
// sig_precharge = 9,
// sig_prechargeAir = 10,
// sig_brakeLight = 7,
// sig_fans = 24, // ON/OFF
// sig_shutdownState = 25,
// sig_MC = 26, // ON/OFF // WHAT?
// PWM_Fan1 = 23,
// PWM_Fan2 = 22,
// PWM_Fan3 = 21,
// PWM_Fan4 = 20,
// ANL_pump = 21,  // analog only!
// sig_buzzer = 6, //  ON/OFF